{% extends 'base.html.twig' %}

{% block title %}Shinydex{% endblock %}

{% block body %}
<div class="bg-neutral-600 rounded-lg w-11/12 mx-auto mt-24">
    <div class="flex justify-center items-center h-8 py-8 text-white">
        <h1 class="text-3xl">Shinydex</h1>
    </div>
    <div class="flex justify-center md:justify-end md:mr-8">
        <div class="bg-neutral-700 text-white border border-black rounded-lg w-20 text-center">
            {{totalCaught}}/{{total}}
        </div>
    </div>
    <div class="flex flex-col md:flex-row items-center md:justify-between md:mx-8 my-5">
        <div class="flex items-center mb-5 md:mb-0">    
            <a href="/caught/new"><button type="button" class="rounded-full bg-sky-400 p-2 text-white shadow-sm hover:bg-sky-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" />
                </svg>
            </button></a>   
            <span class="text-white mx-5">Ajouter un nouveau Shiny</span>
        </div>
        <select name="sel-generation" id="select-generation" class="h-8 text-white bg-neutral-700 border border-black rounded-lg w-80 pl-4 text-center text-xs">
                {% for generation in generations %}
                    <option value="{{generation.id}}">{{generation.number}}</option>
                {% endfor %}
        </select>
    </div>
    <div class=" bg-neutral-700 text-white border border-black flex justify-center rounded-lg w-20 mx-auto">
        <div id="totalCaughtByGen"></div>/<div id="totalByGen"></div>
    </div>
    <div class="my-2 mx-auto h-4 relative w-10/12 rounded-full overflow-hidden">
                <div class="w-full h-full bg-gray-200 absolute"></div>
                <div class="h-full bg-sky-400 absolute" id="dynamicWidth"></div>
            </div>
    <div class="grid grid-cols-3 md:grid-cols-6 lg:grid-cols-9 m-8">
        {% for pokemon in pokemons %}
        <div class="pokemon h-36 text-white relative" value="{{ pokemon.generation.id }}">
            <div class="pokemon_id"> # {{ pokemon.PokedexId }} </div>
            {% set captured = capturedPokemons[pokemon.getId()] is defined %}
            <a href="/pokemon/{{pokemon.PokedexId}}">
            {% if captured %}
            <img src="{{ pokemon.SpriteShiny }}" class="h-16 md:h-24 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2">
            {% else %}
            <img src="{{ pokemon.SpriteRegular }}" class="filter grayscale h-16 md:h-24 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2">
            {% endif %}
            </a>
        </div>
        {% endfor %}
    </div>
</div>
{% endblock %}
{% block javascripts %}
{{ parent() }}
<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
<script type="text/javascript">
function changeGeneration () {
    var selectedGeneration = document.getElementById('select-generation').value;
    var pokemons = document.querySelectorAll('.pokemon'); 
    var total = '{{totalCaughtByGen|raw}}';
    var totals = '{{totalByGen|raw}}';
    total = JSON.parse(total);
    totals = JSON.parse(totals);

    var pokemonWidth = total[selectedGeneration];
    var totalPokemon = totals[selectedGeneration];
    var widthPercentage = (pokemonWidth / totalPokemon) * 100;
    var dynamicWidthElement = document.getElementById('dynamicWidth');
    
    dynamicWidthElement.style.width = `calc(${widthPercentage}%)`;

    if (total[selectedGeneration] == undefined){
        totalCaughtByGen.innerHTML = 0;
    }else{
        totalCaughtByGen.innerHTML = total[selectedGeneration];
    }
    
    if (totals[selectedGeneration] == undefined){
        totalByGen.innerHTML = 0;
    }else{
        totalByGen.innerHTML = totals[selectedGeneration];
    }

    pokemons.forEach(function(pokemon) {
        var generationId = pokemon.getAttribute('value');
        if (selectedGeneration === 'null' || selectedGeneration === generationId) {
            pokemon.style.display = 'block';
        } else {
            pokemon.style.display = 'none';
        }
    });
};

$(function() { changeGeneration(); });

document.getElementById('select-generation').addEventListener('change', changeGeneration);
</script>
{% endblock %}
